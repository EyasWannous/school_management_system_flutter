// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members, constant_identifier_names, non_constant_identifier_names
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:flutter_dotenv/flutter_dotenv.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static String WEB_API_KEY = dotenv.env['WEB_API_KEY']!;
  static String WEB_APP_ID = dotenv.env['WEB_APP_ID']!;
  static String WEB_MESSAGING_SENDER_ID =
      dotenv.env['WEB_MESSAGING_SENDER_ID']!;
  static String WEB_PROJECT_ID = dotenv.env['WEB_PROJECT_ID']!;
  static String WEB_AUTH_DOMAIN = dotenv.env['WEB_AUTH_DOMAIN']!;
  static String WEB_STOREAGE_BUCKET = dotenv.env['WEB_STOREAGE_BUCKET']!;
  static String WEB_MEASUREMENT_ID = dotenv.env['WEB_MEASUREMENT_ID']!;

  static String ANDROID_API_KEY = dotenv.env['ANDROID_API_KEY']!;
  static String ANDROID_APP_ID = dotenv.env['ANDROID_APP_ID']!;
  static String ANDROID_MESSAGING_SENDER_ID =
      dotenv.env['ANDROID_MESSAGING_SENDER_ID']!;
  static String ANDROID_PROJECT_ID = dotenv.env['ANDROID_PROJECT_ID']!;
  static String ANDROID_STOREAGE_BUCKET =
      dotenv.env['ANDROID_STOREAGE_BUCKET']!;

  static String IOS_API_KEY = dotenv.env['IOS_API_KEY']!;
  static String IOS_APP_ID = dotenv.env['IOS_APP_ID']!;
  static String IOS_MESSAGING_SENDER_ID =
      dotenv.env['IOS_MESSAGING_SENDER_ID']!;
  static String IOS_PROJECT_ID = dotenv.env['IOS_PROJECT_ID']!;
  static String IOS_STOREAGE_BUCKET = dotenv.env['IOS_STOREAGE_BUCKET']!;
  static String IOS_CLIENT_ID = dotenv.env['IOS_CLIENT_ID']!;

  static String MACOS_API_KEY = dotenv.env['MACOS_API_KEY']!;
  static String MACOS_APP_ID = dotenv.env['MACOS_APP_ID']!;
  static String MACOS_MESSAGING_SENDER_ID =
      dotenv.env['MACOS_MESSAGING_SENDER_ID']!;
  static String MACOS_PROJECT_ID = dotenv.env['MACOS_PROJECT_ID']!;
  static String MACOS_STOREAGE_BUCKET = dotenv.env['MACOS_STOREAGE_BUCKET']!;
  static String MACOS_IOS_CLIENT_ID = dotenv.env['MACOS_IOS_CLIENT_ID']!;

  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions web = FirebaseOptions(
    apiKey: WEB_API_KEY,
    appId: WEB_APP_ID,
    messagingSenderId: WEB_MESSAGING_SENDER_ID,
    projectId: WEB_PROJECT_ID,
    authDomain: WEB_AUTH_DOMAIN,
    storageBucket: WEB_STOREAGE_BUCKET,
    measurementId: WEB_MEASUREMENT_ID,
  );

  static FirebaseOptions android = FirebaseOptions(
    apiKey: ANDROID_API_KEY,
    appId: ANDROID_APP_ID,
    messagingSenderId: ANDROID_MESSAGING_SENDER_ID,
    projectId: ANDROID_PROJECT_ID,
    storageBucket: ANDROID_STOREAGE_BUCKET,
  );

  static FirebaseOptions ios = FirebaseOptions(
    apiKey: IOS_API_KEY,
    appId: IOS_APP_ID,
    messagingSenderId: IOS_CLIENT_ID,
    projectId: IOS_PROJECT_ID,
    storageBucket: IOS_STOREAGE_BUCKET,
    iosClientId: IOS_CLIENT_ID,
    iosBundleId: 'com.example.teacherApp',
  );

  static FirebaseOptions macos = FirebaseOptions(
    apiKey: MACOS_API_KEY,
    appId: MACOS_APP_ID,
    messagingSenderId: MACOS_MESSAGING_SENDER_ID,
    projectId: MACOS_PROJECT_ID,
    storageBucket: MACOS_STOREAGE_BUCKET,
    iosClientId: MACOS_IOS_CLIENT_ID,
    iosBundleId: 'com.example.teacherApp',
  );
}
